<Window x:Class="BondCalculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BondCalculator"
        mc:Ignorable="d"
        Title="Patrick's Bond Calculator" Height="580" Width="1000" Background="#FF191000">
    <Grid Margin="-377,-31,270,-21" HorizontalAlignment="Left">
        <Label Content="Patrick's Bond Calculator" Height="57" Margin="738,46,-41,0" Width="402" Foreground="White" FontFamily="Segoe UI Semibold" FontSize="24" VerticalAlignment="Top" FontStretch="SemiCondensed"/>
        <Label x:Name="lblParValue" Content="Par Value (or Face Value):" HorizontalAlignment="Left" Height="31" Margin="389,153,0,0" VerticalAlignment="Top" Width="186" Foreground="#FFF9F8F8" FontSize="16"/>
        <Label x:Name="lblCouponRate" Content="Coupon Rate(%):" HorizontalAlignment="Left" Height="32" Margin="389,295,0,0" VerticalAlignment="Top" Width="207" Foreground="#FFF9F8F8" FontSize="16"/>
        <Label x:Name="lblInterestRate" Content="Interest Rate (%):" HorizontalAlignment="Left" Height="36" Margin="389,346,0,0" VerticalAlignment="Top" Width="240" Foreground="#FFF9F8F8" FontSize="16"/>
        <Label x:Name="lblMaturity" Content="Maturity (in years):" HorizontalAlignment="Left" Height="31" Margin="389,199,0,0" VerticalAlignment="Top" Width="240" Foreground="#FFF9F8F8" FontSize="16"/>
        <TextBox x:Name="txtMaturity" HorizontalAlignment="Left" Height="31" Margin="575,199,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="227" RenderTransformOrigin="0.406,-4.645" FontSize="16"/>
        <Label x:Name="lblCompounding" Content="Compounding:" HorizontalAlignment="Left" Height="38" Margin="389,241,0,0" VerticalAlignment="Top" Width="186" Foreground="#FFF9F8F8" FontSize="16"/>
        <TextBox x:Name="txtParValue" HorizontalAlignment="Left" Height="31" Margin="575,153,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="227" FontSize="16" />
        <TextBox x:Name="txtCouponRate" HorizontalAlignment="Left" Height="32" Margin="575,295,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="227" FontSize="16"/>
        <TextBox x:Name="txtInterestRate" HorizontalAlignment="Left" Height="32" Margin="575,346,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="227" FontSize="16"/>
        <ComboBox x:Name="txtCompounding" HorizontalAlignment="Left" Height="31" Margin="575,248,0,0" VerticalAlignment="Top" Width="227" RenderTransformOrigin="0.438,-3.976" FontSize="16">
            <ComboBoxItem Content="Annually" HorizontalAlignment="Left" Width="118"/>
            <ComboBoxItem Content="Semiannually" HorizontalAlignment="Left" Width="118"/>
            <ComboBoxItem Content="Quarterly" HorizontalAlignment="Left" Width="118"/>
            <ComboBoxItem Content="Monthly" HorizontalAlignment="Left" Width="118"/>
            <ComboBoxItem Content="Weekly" HorizontalAlignment="Left" Width="118"/>
            <ComboBoxItem Content="Daily" HorizontalAlignment="Left" Width="118"/>
        </ComboBox>
        <Button x:Name="btnRunCalculation" Content="Run Calculation" HorizontalAlignment="Left" Height="38" Margin="401,509,0,0" VerticalAlignment="Top" Width="114" Background="Green" Foreground="White" FontWeight="Bold" FontSize="14" Click="BtnRunCalculation_Click" Cursor="Hand" Style="{DynamicResource ButtonStyle1}">
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" CornerRadius="15" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="green"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="yellow"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
        </Button>
        <Button x:Name="btnReset" Content="Reset" HorizontalAlignment="Left" Height="38" Margin="539,509,0,0" VerticalAlignment="Top" Width="116" Background="Blue" Foreground="White" FontWeight="Bold" FontSize="14" Click="BtnReset_Click" Cursor="Hand" Style="{DynamicResource ButtonStyle1}">
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border"  CornerRadius="15" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="blue"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="yellow"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
        </Button>
        <Button x:Name="btnExit" Content="Exit" HorizontalAlignment="Left" Height="38" Margin="681,509,0,0" VerticalAlignment="Top" Width="116" Background="Red" Foreground="White" FontWeight="Bold" FontSize="14" RenderTransformOrigin="0.504,1.737" Click="BtnExit_Click" Cursor="Hand" Style="{DynamicResource ButtonStyle1}">
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border"  CornerRadius="15" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="red"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="yellow"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
        </Button>
        <RichTextBox x:Name="txtResult" HorizontalAlignment="Left" Height="422" Margin="840,136,-247,0" VerticalAlignment="Top" Width="506" FontSize="16" IsEnabled="False">
            <FlowDocument/>
        </RichTextBox>
        <Label x:Name="lblErrorFill" Content="    Please make sure to fill out all the different information needed." HorizontalAlignment="Left" Height="24" Margin="394,112,0,0" VerticalAlignment="Top" Width="365" Foreground="Red" FontSize="11" Visibility="Hidden"/>
        <Label x:Name="lblErrorFormat" Content="        Please make sure to enter correct formats in the fields before running the calculation." HorizontalAlignment="Left" Height="29" Margin="382,113,0,0" VerticalAlignment="Top" Width="501" Foreground="Red" FontSize="11" Visibility="Hidden"/>
        <Label x:Name="lblParValue_Output" Content="" HorizontalAlignment="Left" Height="31" Margin="575,153,0,0" VerticalAlignment="Top" Width="227" Foreground="#FFF9F8F8" FontSize="16" Visibility="Hidden"/>
        <Label x:Name="lblMaturity_Output" Content="" HorizontalAlignment="Left" Height="31" Margin="575,199,0,0" VerticalAlignment="Top" Width="227" Foreground="#FFF9F8F8" FontSize="16" Visibility="Hidden"/>
        <Label x:Name="lblCompounding_Output" Content="" HorizontalAlignment="Left" Height="31" Margin="575,248,0,0" VerticalAlignment="Top" Width="227" Foreground="#FFF9F8F8" FontSize="16" Visibility="Hidden"/>
        <Label x:Name="lblCouponRate_Output" Content="" HorizontalAlignment="Left" Height="32" Margin="575,295,0,0" VerticalAlignment="Top" Width="227" Foreground="#FFF9F8F8" FontSize="16" Visibility="Hidden"/>
        <Label x:Name="lblInterestRate_Output" Content="" HorizontalAlignment="Left" Height="32" Margin="575,346,0,0" VerticalAlignment="Top" Width="227" Foreground="#FFF9F8F8" FontSize="16" Visibility="Hidden"/>
        <Label x:Name="lblInterestRate_description" Content="Fixed interest rate" HorizontalAlignment="Left" Height="30" Margin="389,366,0,0" VerticalAlignment="Top" Width="240" Foreground="Green" FontSize="11" RenderTransformOrigin="0.488,-0.425"/>
        <Label x:Name="lblResetInfo" Content="Press the 'Reset' button below to run a new calculation " HorizontalAlignment="Left" Height="36" Margin="432,436,0,0" VerticalAlignment="Top" Width="335" Foreground="Yellow" FontSize="13" Visibility="Hidden"/>
        <Label Content="Using C#/.Net WPF" Height="57" Margin="764,74,94,0" Foreground="White" FontFamily="Segoe UI Semibold" FontSize="24" VerticalAlignment="Top" FontStretch="SemiCondensed"/>
        <Image x:Name="imgLblErrorFormat"  HorizontalAlignment="Left" Height="29" Margin="389,113,0,0" VerticalAlignment="Top" Width="19" Source="C:\Users\armel\Pictures\icons\icon-danger.png" Visibility="Hidden"/>
        <Image x:Name="imgLblErrorFill"  HorizontalAlignment="Left" Height="29" Margin="389,113,0,0" VerticalAlignment="Top" Width="19" Source="C:\Users\armel\Pictures\icons\icon-danger.png" Visibility="Hidden"/>

    </Grid>
</Window>
